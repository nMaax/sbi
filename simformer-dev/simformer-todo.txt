## Branching
From merge_flow_builders_to_current_main:
	-> simformer (actual branch for the PR)
	-> simformer-dev (quick tests)

## Pre-existing code

- `base_vf_inference.py` > `VectorFieldInference`: interface for the Inference object that will be used by the user, it orchestrates training, sampling, data storing and everything for the user, the following objects will be called by this Interface at various steps in the use of the Simformer
- `vector_field_nets.py` (which provides `DiTBlocks`, `RandomFourirerTimeEmbedding` and other components): code to manage the network itself (Transformer with masking), here I will need to make my Simformer network and a factory function for it
- `score_estimators.py`  (which provides `VEScoreEstimator` and `ConditialScoreEstimator`): here I will use these Score Estimators for implementing the loss on my training process, they will take care to add noise and estimate the score function at each training step
- `diffuser.py` > `Diffuser`: here I can re-use the diffuser to sample from my Simformer
