name: Continuous Integration

on: [pull_request, workflow_dispatch]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        split_size: [4]
        group_number: [1, 2, 3, 4]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: false

    - name: Check license headers
      run: |
          expected_header_1="# This file is part of sbi, a toolkit for simulation-based inference. sbi is licensed"
          expected_header_2="# under the Apache License Version 2.0, see <https://www.apache.org/licenses/>"

          invalid_files=()

          while IFS= read -r file; do
              file_header_1=$(head -n 1 "$file")
              file_header_2=$(head -n 2 "$file" | tail -n 1)

              invalid=false

              # Check the first line
              if [ "$file_header_1" != "$expected_header_1" ]; then
                  invalid=true
              fi

              # Check the second line
              if [ "$file_header_2" != "$expected_header_2" ]; then
                  invalid=true
              fi

              # If either line is invalid, add to the list
              if [ "$invalid" = true ]; then
                  invalid_files+=("$file")
              fi

          done < <(find sbi tests -name "*.py" -type f)

          # Report results
          if [ ${#invalid_files[@]} -ne 0 ]; then
              echo "❌ Missing or incorrect license headers in the following files:"
              for file in "${invalid_files[@]}"; do
                  echo "   $file"
              done
              echo "Make sure the following two lines are provided and correctly spelled at the very start of all above listed files"
              echo "$file_header_1"
              echo "$file_header_2"
              exit 1
          else
              echo "✅ All files have the correct license headers."
              exit 0
          fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Install dependencies with uv
      run: uv sync --extra dev

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ matrix.python-version }}-

    - name: Run fast CPU tests with coverage
      run: uv run pytest -v -n auto -m "not slow and not gpu" --cov=sbi --cov-report=xml --junitxml=junit.xml -o junit_family=legacy --splitting-algorithm least_duration --splits ${{ matrix.split_size }} --group ${{ matrix.group_number }} tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,PYTHON
        file: ./coverage.xml
        flags: unittests
        name: codecov-sbi-fast-cpu
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
